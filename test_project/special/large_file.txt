// This is a relatively large file with repetitive content to test handling of large files

"""
LARGE FILE TESTING

This file contains repetitive content for testing purposes.
It allows us to verify that the code flattener can handle larger files.
The file is not actually that large (for test convenience) but large enough to test threshold behaviors.
In a real-world scenario, the extension may encounter source files with tens of thousands of lines.
"""

// SECTION 1: REPETITIVE CODE BLOCKS
${Array(100).fill().map((_, i) => `function testFunction${i}() {
  console.log("This is test function ${i}");
  return {
    index: ${i},
    name: "Test ${i}",
    description: "This is test ${i} of many similar functions",
    data: [${Array(20).fill().map((_, j) => j + i * 20).join(', ')}],
    timestamp: new Date().toISOString()
  };
}`).join('\n\n')}

// SECTION 2: DIFFERENT JSON OBJECTS
const testData = [
${Array(50).fill().map((_, i) => `  {
    "id": "${i}",
    "name": "Test Item ${i}",
    "description": "Description for test item ${i}",
    "tags": ["test", "sample", "item${i}"],
    "properties": {
      "priority": ${i % 5},
      "visible": ${i % 2 === 0},
      "score": ${Math.random().toFixed(2)},
      "category": "Category ${i % 10}"
    },
    "metadata": {
      "created": "2023-01-${(i % 30) + 1}",
      "version": "1.${i}.0",
      "author": "Test Author"
    }
  }`).join(',\n')}
];

// SECTION 3: COMMENTS AND DOCUMENTATION

/**
 * This section has many documentation comments
 * to test how JSDoc-style comments are handled
 */

${Array(30).fill().map((_, i) => `/**
 * Documentation for item ${i}
 * @param {string} id - Unique identifier
 * @param {Object} options - Configuration options
 * @param {boolean} options.enabled - Whether the feature is enabled
 * @param {number} options.timeout - Timeout in milliseconds
 * @returns {Promise<Object>} The result of the operation
 * @throws {Error} If the operation fails
 */`).join('\n\n')}

// SECTION 4: MORE REPETITIVE TEXT

"""
This section contains more repetitive text for padding purposes.
The goal is to make this file large enough to test file size handling.
It contains repeated paragraphs to increase the file size.
"""

${Array(30).fill(`
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. 
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. 
Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
`).join('\n')}

// END OF FILE
